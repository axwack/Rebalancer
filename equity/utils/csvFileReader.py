from equity.models import SecuritySelectionModels, UserSecuritySelectionModel, ClassificationNamesfrom django.db import DatabaseErrorfrom django.shortcuts import render_to_responseget = lambda node_id: UserSecuritySelectionModel.objects.get(pk=node_id)def insertRootModelRow(file, filename):    ids = {}    for row in file:        userModel = UserSecuritySelectionModel()        if (filename):            _SSM = SecuritySelectionModels.objects.get(securitySelectionModelName=filename)        userModel.SSM = _SSM        if not (row['classificationName_id']) == "":            _CLASSIFICATIONNAME = ClassificationNames.objects.get(classificationName=row['classificationName_id'])            userModel.classificationName = _CLASSIFICATIONNAME            userModel.ext_model_id = _CLASSIFICATIONNAME.id        else:            userModel.classificationName = None            RootClassificationName = \            SecuritySelectionModels.objects.filter(securitySelectionModelName=row['ssm_id']).values('id')[0]            userModel.ext_model_id = RootClassificationName['id']        userModel.tgtWeight = float(row['tgtWeight'])        userModel.currWeight = float(row['currWeight'])        if (str(row['hasChildNode']).capitalize() == 'True'):            userModel.hasChildNode = True        else:            userModel.hasChildNode = False        userModel.isSSMNameNode = row['isSSMNameNode']        # Get Parent Node        if (row['parent_id'] == ""):            userModel.parent = None            userModel.save()            root_id = userModel.id        elif (row['parent_id'] == _SSM.securitySelectionModelName):            root = get(root_id)            root.add_child(instance=userModel)    ids['id'] = root_id    ids['SSM_id'] = _SSM.id    return ids